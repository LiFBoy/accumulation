{"version":3,"sources":["../lib/time.js","../lib/pureRender.js","../lib/index.js","../lib/transition.js","../lib/DatePickerItem.js","../lib/DatePicker.js","../lib/Modal.js"],"names":["throwIfInvalidDate","date","Object","prototype","toString","call","Error","daysInMonth","year","month","Date","getDate","convertDate","format","str","o","getMonth","getHours","getMinutes","getSeconds","test","replace","RegExp","$1","getFullYear","substr","length","k","nextYear","now","index","arguments","undefined","nextMonth","dayOfMonth","Math","min","nextDate","shallowEqual","prev","next","prevKeys","keys","nextKeys","every","key","hasOwnProperty","PureRender","Component","shouldComponentUpdate","nextProps","nextState","this","props","state","EnhanceDatePicker","_ref","onModalClose","event","target","currentTarget","onCancel","isOpen","objectWithoutProperties","React","display","DatePicker","ModalDatePicker","preProps","preState","TRANSITION","TRANSITIONEND","TRANSITION_CSS","document","body","style","transition","webkitTransition","TRANSFORM","TRANSFORM_CSS","transform","webkitTransform","DATE_HEIGHT","DATE_LENGTH","MIDDLE_INDEX","floor","MIDDLE_Y","DatePickerItem","_Component","animating","touchY","translateY","currentIndex","_this","renderDatepickerItem","bind","handleContentTouch","handleContentMouseDown","handleContentMouseMove","handleContentMouseUp","componentWillMount","_iniDates","value","componentWillReceiveProps","getTime","setState","typeName","dates","Array","apply","map","TimeUtil","_updateDates","direction","slice","concat","_checkIsUpdateDates","_clearTransition","obj","_moveToNext","max","_props","_moveTo","refs","scroll","onSelect","_this2","handleStart","pageY","targetTouches","handleMove","dir","_props2","handleEnd","changedTouches","preventDefault","type","addEventListener","removeEventListener","className","render","scrollStyle","_scrollStyle","marginTop","propTypes","PropTypes","object","string","func","handleFinishBtnClick","handleDateSelect","theme","dateFormat","themeClassName","indexOf","array","renderSubtreeIntoContainer","ReactDOM","unstable_renderSubtreeIntoContainer","Modal","componentDidMount","_div","createElement","classList","add","appendChild","renderPortal","newProps","componentWillUnmount","unmountComponentAtNode","parentNode","removeChild","portal","cloneElement","children","_extends","node","bool","defaultProps"],"mappings":"4iBAKA,QAASA,GAAmBC,MAC2B,kBAA/CC,OAAOC,UAAUC,SAASC,KAAKJ,EAAM,WAC/B,IAAIK,OAAM,UAIxB,QAASC,GAAYC,EAAMC,SAChB,IAAIC,MAAKF,EAAMC,EAAQ,EAAG,GAAGE,UAQxC,QAAgBC,GAAYX,EAAMY,MAC1BC,GAAMD,EACJE,QACId,EAAKe,WAAa,OAClBf,EAAKU,eACLV,EAAKgB,gBACLhB,EAAKiB,kBACLjB,EAAKkB,aAEX,QAAOC,KAAKP,OACNC,EAAIO,QAAQC,OAAOC,GAChBtB,EAAKuB,cAAcpB,WAAYqB,OAAO,EAAIH,OAAOC,GAAGG,cAG5D,GAAMC,KAAKZ,GACR,GAAIO,QAAJ,IAAeK,EAAf,KAAqBP,KAAKP,OACpBC,EAAIO,QAAQC,OAAOC,GACC,IAArBD,OAAOC,GAAGG,OACXX,EAAEY,IAAM,KAAKZ,EAAEY,IAAKF,OAAQV,EAAEY,GAAGvB,WAAYsB,gBAIlDZ,GAQX,QAAgBc,GAASC,MAAKC,GAAWC,UAAAL,QAAA,GAAAM,SAAAD,UAAA,GAAH,EAAGA,UAAA,KAClBF,MACb5B,GAAO,GAAIS,MAAKmB,EAAIL,cAAgBM,EAAOD,EAAIb,WAAYa,EAAIlB,iBAC9DV,GAGX,QAAgBgC,GAAUJ,MAAKC,GAAWC,UAAAL,QAAA,GAAAM,SAAAD,UAAA,GAAH,EAAGA,UAAA,KACnBF,MACbrB,GAAOqB,EAAIL,cACXf,EAAQoB,EAAIb,WAAac,EACzBI,EAAaC,KAAKC,IAAIP,EAAIlB,UAAWJ,EAAYC,EAAMC,IACvDR,EAAO,GAAIS,MAAKF,EAAMC,EAAOyB,SAC5BjC,GAGX,QAAgBoC,GAASR,MAAKC,GAAWC,UAAAL,QAAA,GAAAM,SAAAD,UAAA,GAAH,EAAGA,UAAA,KAClBF,MACb5B,GAAO,GAAIS,MAAKmB,EAAIL,cAAeK,EAAIb,WAAYa,EAAIlB,UAAYmB,SAClE7B,GCpEJ,QAASqC,GAAaC,EAAMC,MAC3BD,IAASC,EAAM,OAAO,KACpBC,GAAWvC,OAAOwC,KAAKH,GACvBI,EAAWzC,OAAOwC,KAAKF,SAEzBC,KAAaE,GAEVF,EAASG,MAAM,SAACC,SACZJ,GAASK,eAAeD,IAAQJ,EAASI,KAASF,EAASE,KAI1E,QAASE,GAAWC,KACN7C,UAAU8C,sBAAwB,SAASC,EAAWC,SACrDJ,GAAWE,sBAAsBC,EAAWC,EAAWC,KAAKC,MAAOD,KAAKE,QCRvF,QAASC,GAATC,WACaC,GAAaC,GACdA,EAAMC,SAAWD,EAAME,iBACjBC,cAHWC,GAAoBN,EAApBM,OAAWT,EAASU,EAAAP,GAAA,iBAQzCQ,GAAAA,4BACaC,QAASH,EAAS,GAAK,gBACvBL,YACC,oCACTS,EAAeb,IAM5B,QAASc,GAAgBd,SAEjBW,GAAAA,kCACKT,EAAD,u1NDTZR,GAAWE,sBAAwB,SAAUC,EAAWC,EAAWiB,EAAUC,UACjE/B,EAAa8B,EAAUlB,KAAeZ,EAAa+B,EAAUlB,GEnBzE,IAAImB,GAAa,KACbC,EAAgB,KAChBC,EAAiB,IACyB,iBAAnCC,UAASC,KAAKC,MAAMC,cACd,eACG,kBACC,cACsC,gBAAzCH,UAASC,KAAKC,MAAME,qBACrB,qBACI,uBACD,sBAGpB,IAAIC,GAAY,KACZC,EAAgB,IACyB,iBAAlCN,UAASC,KAAKC,MAAMK,aACf,cACI,aACsC,gBAAxCP,UAASC,KAAKC,MAAMM,oBACtB,oBACI,s3BCNdC,EAAc,GACdC,EAAc,GACdC,EAAejD,KAAKkD,MAAMF,EAAc,GACxCG,GAAaJ,EAAcE,EAO3BG,EAAA,SAAAC,cACUnC,0BACRmC,EAAAnF,KAAA+C,KAAMC,aACDoC,WAAY,IACZC,OAAS,IACTC,WAAa,IACbC,aAAeR,IAEf9B,kBACWgC,aACAO,EAAKD,aAAeR,GAAgBF,KAG/CY,qBAAuBD,EAAKC,qBAAqBC,KAA1BF,KACvBG,mBAAqBH,EAAKG,mBAAmBD,KAAxBF,KACrBI,uBAAyBJ,EAAKI,uBAAuBF,KAA5BF,KACzBK,uBAAyBL,EAAKK,uBAAuBH,KAA5BF,KACzBM,qBAAuBN,EAAKM,qBAAqBJ,KAA1BF,+BAGhCO,mBAAA,gBACSC,UAAUjD,KAAKC,MAAMiD,oBAI9BC,0BAAA,SAA0BrD,GAClBA,EAAUoD,MAAME,YAAcpD,KAAKC,MAAMiD,MAAME,iBAG9CH,UAAUnD,EAAUoD,YACpBV,aAAeR,OACfqB,qBACWnB,aACAlC,KAAKwC,aAAeR,GAAgBF,kBAYxDjC,sBAAA,SAAsBC,EAAWC,SACtBD,GAAUoD,MAAME,YAAcpD,KAAKC,MAAMiD,MAAME,YACjDlE,EAAaa,EAAWC,KAAKE,oBAGtC+C,UAAA,SAAUpG,MACEyG,GAAatD,KAAKC,MAAlBqD,SACFC,EAAQC,MAAAC,MAAA7E,OAAS4E,MAAMzB,IACxB2B,IAAI,SAACR,EAAOxE,SACTiF,GAAA,OAAgBL,GAAYzG,EAAM6B,EAAQsD,UAC7CqB,UAAWE,MAAAA,iBAGpBK,aAAA,SAAaC,MACDP,GAAatD,KAAKC,MAAlBqD,SACAC,EAAUvD,KAAKE,MAAfqD,KACU,KAAdM,QACKrB,oBACAa,0BAEME,EAAMO,MAAM,IACfH,EAAA,OAAgBL,GAAYC,EAAMA,EAAMjF,OAAS,GAAI,gBAE7C0B,KAAKwC,aAAeR,GAAgBF,WAG/CU,oBACAa,iBAEGM,EAAA,OAAgBL,GAAYC,EAAM,IAAI,IAD1CQ,OAEOR,EAAMO,MAAM,EAAGP,EAAMjF,OAAS,eAEzB0B,KAAKwC,aAAeR,GAAgBF,kBAK5DkC,oBAAA,SAAoBH,EAAWtB,SACN,KAAdsB,EACH7D,KAAKwC,aAAeV,EAAcA,EAAc,GAAKS,EACrDvC,KAAKwC,aAAeV,EAAcA,EAAc,GAAKS,eAQ7D0B,iBAAA,SAAiBC,KACT3C,MAAML,GAAc,gBAQ5BiD,YAAA,SAAYN,MACFhH,GAAOmD,KAAKE,MAAMqD,MAAMvB,KACThC,KAAKC,MAAlBmE,EAFWC,EAEXD,IAAKpF,EAFMqF,EAENrF,GACT6E,MAAc,GAAMhH,EAAKuG,UAAYpE,EAAIoE,eACpCQ,aAAa,GACG,IAAdC,GAAmBhH,EAAKuG,UAAYgB,EAAIhB,gBAC1CQ,cAAa,QAGjBU,QAAQtE,KAAKuE,KAAKC,OAAQxE,KAAKwC,2BASxC8B,QAAA,SAAQJ,EAAK1B,mBACJH,WAAY,IACbd,MAAML,GAAiBS,EAA3B,qBACK0B,sBACYb,EAAeV,eAErB,aACFO,WAAY,IACZpC,MAAMwE,SAASC,EAAKxE,MAAMqD,MAAMvB,MAChCiC,iBAAiBS,EAAKH,KAAKC,SACjC,kBAGPG,YAAA,SAAYrE,QACHgC,OAAShC,EAAMsE,OAAStE,EAAMuE,cAAc,GAAGD,WAC/CrC,WAAavC,KAAKE,MAAMqC,wBAIjCuC,WAAA,SAAWxE,MACDgC,GAAShC,EAAMsE,OAAStE,EAAMuE,cAAc,GAAGD,MAC/CG,EAAMzC,EAAStC,KAAKsC,OACpBC,EAAavC,KAAKuC,WAAawC,EAC/BlB,EAAYkB,EAAM,GAAI,EAAK,EAG3BlI,EAAOmD,KAAKE,MAAMqD,MAAMvB,KACThC,KAAKC,MAAlBmE,EARMY,EAQNZ,IAAKpF,EARCgG,EAQDhG,GACTnC,GAAKuG,UAAYpE,EAAIoE,WACrBvG,EAAKuG,UAAYgB,EAAIhB,YAKrBpD,KAAKgE,oBAAoBH,EAAWtB,SAC/BqB,aAAaC,QAGjBR,UAAWd,WAAAA,kBAGpB0C,UAAA,SAAU3E,MACAgC,GAAShC,EAAMsE,OAAStE,EAAM4E,eAAe,GAAGN,MAChDG,EAAMzC,EAAStC,KAAKsC,OACpBuB,EAAYkB,EAAM,GAAI,EAAK,OAC5BZ,YAAYN,gBAQrBjB,mBAAA,SAAmBtC,KACT6E,iBACFnF,KAAKqC,YACU,eAAf/B,EAAM8E,UACDT,YAAYrE,GACK,cAAfA,EAAM8E,UACRN,WAAWxE,GACM,aAAfA,EAAM8E,WACRH,UAAU3E,iBASvBuC,uBAAA,SAAuBvC,GACfN,KAAKqC,iBACJsC,YAAYrE,YACR+E,iBAAiB,YAAarF,KAAK8C,iCACnCuC,iBAAiB,UAAWrF,KAAK+C,oCAG9CD,uBAAA,SAAuBxC,GACfN,KAAKqC,gBACJyC,WAAWxE,gBAGpByC,qBAAA,SAAqBzC,GACbN,KAAKqC,iBACJ4C,UAAU3E,YACNgF,oBAAoB,YAAatF,KAAK8C,iCACtCwC,oBAAoB,UAAWtF,KAAK+C,oCAQjDL,qBAAA,SAAqB7F,EAAM6B,MACjB6G,GACD1I,EAAOmD,KAAKC,MAAMjB,KAAOnC,EAAOmD,KAAKC,MAAMmE,IAC5C,WAAa,SAGbxD,GAAAA,wBACSlC,YACM6G,KACW1I,EAAMmD,KAAKC,MAAMxC,sBAKnD+H,OAAA,iBACUC,GAAAC,KAAAA,EACDhE,GADC,cACyB1B,KAAKE,MAAMqC,WADpC,MAAAmD,EAEFC,UAAW3F,KAAKE,MAAMyF,UAFpBD,SAMF9E,GAAAA,qBAAK2E,UAAU,qDAEG,mCACIvF,KAAK4C,+BACN5C,KAAK4C,8BACN5C,KAAK4C,+BACJ5C,KAAK6C,+CACb0C,UAAU,8CAEH,mBACM,0BACHE,QACDvF,MAAMqD,MAAMG,IAAI1D,KAAK0C,8BAvP1B9C,EAAAA,UAgQ7BuC,GAAeyD,iBACJC,EAAAA,UAAUC,WACZD,EAAAA,UAAUC,WACVD,EAAAA,UAAUC,cACPD,EAAAA,UAAUE,gBACRF,EAAAA,UAAUE,gBACVF,EAAAA,UAAUG,SCjRlBlF,GAAA,SAAAsB,cACUnC,0BACRmC,EAAAnF,KAAA+C,KAAMC,aACDC,aACMjB,EAASwD,EAAKxC,MAAMiD,UAG1B+C,qBAAuBxD,EAAKwD,qBAAqBtD,KAA1BF,KACvByD,iBAAmBzD,EAAKyD,iBAAiBvD,KAAtBF,+BAG5BU,0BAAA,SAA0BrD,MAEhBjD,GAAOoC,EAASa,EAAUoD,MAC5BrG,GAAKuG,YAAcpD,KAAKE,MAAMgD,MAAME,gBAC/BC,UAAWH,MAAOrG,iBAY/BgD,sBAAA,SAAsBC,EAAWC,MACvBlD,GAAOoC,EAASc,EAAUmD,aACzBrG,GAAKuG,YAAcpD,KAAKE,MAAMgD,MAAME,WACnCzD,EAAWE,sBAAsBC,EAAWC,EAAWC,KAAKC,MAAOD,KAAKE,oBAOpF+F,qBAAA,gBACShG,MAAMwE,SAASzE,KAAKE,MAAMgD,oBAOnCgD,iBAAA,SAAiBhD,QACRG,UAAWH,MAAAA,iBAOpBsC,OAAA,iBAC4CxF,KAAKC,MAArCjB,EADHqF,EACGrF,IAAKoF,EADRC,EACQD,IAAK+B,EADb9B,EACa8B,MAAOC,EADpB/B,EACoB+B,WACnBlD,EAAQlD,KAAKE,MAAMgD,MACnBmD,GACD,UAAW,OAAQ,MAAO,UAAW,gBAAgBC,QAAQH,MAAW,EACzE,UAAYA,QAGZvF,GAAAA,6CAC6ByF,0BACpBd,UAAU,uBAAiCrC,EAAO,sCAClDqC,UAAU,sCACVpD,SACUe,MACFlE,MACAoF,WACI,cACDgC,EAAW,YACTpG,KAAKkG,mCAClB/D,SACUe,MACFlE,MACAoF,WACI,eACDgC,EAAW,YACTpG,KAAKkG,mCAClB/D,SACUe,MACFlE,MACAoF,WACI,cACDgC,EAAW,YACTpG,KAAKkG,2CAElBX,UAAU,oDAEG,gCACDvF,KAAKiG,2DAEJ,gCACDjG,KAAKC,MAAMQ,sBA7FnBb,EAAAA,UAoGzBkB,GAAW8E,iBACAC,EAAAA,UAAUE,aACVF,EAAAA,UAAUC,WACZD,EAAAA,UAAUC,WACVD,EAAAA,UAAUC,kBACHD,EAAAA,UAAUU,eACZV,EAAAA,UAAUG,cACVH,EAAAA,UAAUG,KCtHxB,IAAMQ,GAA6BC,EAASC,oCAGtCC,EAAA,SAAAvE,2FAUFwE,kBAAA,gBACSC,KAAOxF,SAASyF,cAAc,YAC9BD,KAAKE,UAAUC,IAAI,yBACf1F,KAAK2F,YAAYjH,KAAK6G,WAC1BK,aAAalH,KAAKC,oBAG3BkD,0BAAA,SAA0BgE,QACjBD,aAAaC,gBAGtBC,qBAAA,aACaC,uBAAuBrH,KAAK6G,WAChCA,KAAKS,WAAWC,YAAYvH,KAAK6G,mBAG1CK,aAAA,SAAajH,MACHuH,GACN5G,EAAM6G,aAAazH,KAAKC,MAAMyH,SAA9BC,KAA6C1H,GAAOR,IAAK,WAAY,WAEhE+H,OACLhB,EAA2BxG,KAAMwH,EAAQxH,KAAK6G,mBAGlDrB,OAAA,iBACY5E,GAAAA,cAAAA,WAAAA,UAnCIhB,EAAAA,iBAAd+G,GACKf,oBACOC,EAAAA,UAAU+B,YACZ/B,EAAAA,UAAUgC,MAHpBlB,EAMKmB,sBACK,GJoBhB/G,EAAgB6E,kBACJC,EAAAA,UAAUgC,WACXhC,EAAAA,UAAUE,aACVF,EAAAA,UAAUC,WACZD,EAAAA,UAAUC,WACVD,EAAAA,UAAUC,kBACHD,EAAAA,UAAUU,eACZV,EAAAA,UAAUG,cACVH,EAAAA,UAAUG,MAGxBjF,EAAgB+G,sBACJ,QACD,gBACA,GAAIxK,UACN,GAAIA,MAAK,KAAM,EAAG,OAClB,GAAIA,MAAK,KAAM,EAAG,eACV,OAAQ,IAAK,cAChB,sBACA","file":"react-mobile-datepicker.min.js","sourcesContent":["/**\n * @module time工具\n */\n\n\nfunction throwIfInvalidDate(date) {\n    if (Object.prototype.toString.call(date, null) !== '[object Date]') {\n        throw new Error('参数类型不对');\n    }\n}\n\nfunction daysInMonth(year, month) {\n    return new Date(year, month + 1, 0).getDate();\n}\n\n/**\n * 对Date的扩展，将 Date 转化为指定格式的String\n * @param  {Date}       日期\n * @return {String}     字符串格式\n */\nexport function convertDate(date, format) {\n    let str = format;\n    const o = {\n        'M+': date.getMonth() + 1,\n        'D+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n    };\n    if (/(Y+)/.test(format)) {\n        str = str.replace(RegExp.$1,\n                (date.getFullYear().toString()).substr(4 - RegExp.$1.length));\n    }\n\n    for (const k in o) { // eslint-disable-line\n        if (new RegExp(`(${k})`).test(format)) {\n            str = str.replace(RegExp.$1,\n                (RegExp.$1.length === 1) ?\n                o[k] : (`00${o[k]}`.substr((o[k].toString()).length)));\n        }\n    }\n\n    return str;\n}\n\n/**\n * 获取相对日期的偏移日期\n * @param  {Date}       日期\n * @return {number}     相对的天数\n */\nexport function nextYear(now, index = 0) {\n    throwIfInvalidDate(now);\n    const date = new Date(now.getFullYear() + index, now.getMonth(), now.getDate());\n    return date;\n}\n\nexport function nextMonth(now, index = 0) {\n    throwIfInvalidDate(now);\n    const year = now.getFullYear();\n    const month = now.getMonth() + index;\n    const dayOfMonth = Math.min(now.getDate(), daysInMonth(year, month));\n    const date = new Date(year, month, dayOfMonth);\n    return date;\n}\n\nexport function nextDate(now, index = 0) {\n    throwIfInvalidDate(now);\n    const date = new Date(now.getFullYear(), now.getMonth(), now.getDate() + index);\n    return date;\n}\n","export function shallowEqual(prev, next) {\n    if (prev === next) return true;\n    const prevKeys = Object.keys(prev);\n    const nextKeys = Object.keys(next);\n\n    if (prevKeys !== nextKeys) return false;\n\n    return prevKeys.every((key) => {\n        return prevKeys.hasOwnProperty(key) && prevKeys[key] === nextKeys[key];\n    });\n}\n\nfunction PureRender(Component) {\n    Component.prototype.shouldComponentUpdate = function(nextProps, nextState) {\n        return PureRender.shouldComponentUpdate(nextProps, nextState, this.props, this.state);\n    };\n}\n\nPureRender.shouldComponentUpdate = function (nextProps, nextState, preProps, preState) {\n    return !shallowEqual(preProps, nextProps) || !shallowEqual(preState, nextState);\n};\n\nexport default PureRender;\n","import './index.css';\nimport React, { PropTypes } from 'react';\nimport DatePicker from './DatePicker.js';\nimport Modal from './Modal.js';\n\n\nfunction EnhanceDatePicker({ isOpen, ...props }) {\n    function onModalClose(event) {\n        if (event.target === event.currentTarget) {\n            props.onCancel();\n        }\n    }\n\n    return (\n        <div\n            style={{ display: isOpen ? '' : 'none' }}\n            onClick={onModalClose}\n            className=\"datepicker-modal\">\n            <DatePicker {...props} />\n        </div>\n    );\n}\n\n\nfunction ModalDatePicker(props) {\n    return (\n        <Modal {...props}>\n            <EnhanceDatePicker />\n        </Modal>\n    );\n}\n\nModalDatePicker.propTypes = {\n    isOpen: PropTypes.bool,\n    theme: PropTypes.string,\n    value: PropTypes.object,\n    min: PropTypes.object,\n    max: PropTypes.object,\n    dateFormat: PropTypes.array,\n    onSelect: PropTypes.func,\n    onCancel: PropTypes.func,\n};\n\nModalDatePicker.defaultProps = {\n    isOpen: false,\n    theme: 'default',\n    value: new Date(),\n    min: new Date(1970, 0, 1),\n    max: new Date(2050, 0, 1),\n    dateFormat: ['YYYY', 'M', 'D'],\n    onSelect: () => {},\n    onCancel: () => {},\n};\n\nexport default ModalDatePicker;\n","let TRANSITION = null;\nlet TRANSITIONEND = null;\nlet TRANSITION_CSS = null;\nif (typeof document.body.style.transition === 'string') {\n    TRANSITION = 'transition';\n    TRANSITIONEND = 'transitionend';\n    TRANSITION_CSS = 'transition';\n} else if (typeof document.body.style.webkitTransition === 'string') {\n    TRANSITION = 'WebkitTransition';\n    TRANSITION_CSS = '-webkit-transition';\n    TRANSITIONEND = 'webkitTransitionEnd';\n}\n\nlet TRANSFORM = null;\nlet TRANSFORM_CSS = null;\nif (typeof document.body.style.transform === 'string') {\n    TRANSFORM = 'transform';\n    TRANSFORM_CSS = 'transform';\n} else if (typeof document.body.style.webkitTransform === 'string') {\n    TRANSFORM = 'WebkitTransform';\n    TRANSFORM_CSS = '-webkit-transform';\n}\n\nexport {\n    TRANSITION,\n    TRANSITIONEND,\n    TRANSITION_CSS,\n    TRANSFORM,\n    TRANSFORM_CSS,\n};\n","\n/**\n * @module Date组件\n */\nimport React, { Component, PropTypes } from 'react';\nimport * as TimeUtil from './time.js';\nimport { shallowEqual } from './pureRender.js';\n\nimport {\n    TRANSITION,\n    TRANSFORM,\n    TRANSFORM_CSS,\n} from './transition';\n\nconst DATE_HEIGHT = 40;                              // 每个日期的高度\nconst DATE_LENGTH = 10;                              // 日期的个数\nconst MIDDLE_INDEX = Math.floor(DATE_LENGTH / 2);     // 日期数组中间值的索引\nconst MIDDLE_Y = - DATE_HEIGHT * MIDDLE_INDEX;       // translateY值\n\n\n/**\n * Class Date组件类\n * @extends Component\n */\nclass DatePickerItem extends Component {\n    constructor(props) {\n        super(props);\n        this.animating = false;                 // 判断是否在transition过渡动画之中\n        this.touchY = 0;                        // 保存touchstart的pageY\n        this.translateY = 0;                    // 容器偏移的距离\n        this.currentIndex = MIDDLE_INDEX;       // 滑动中当前日期的索引\n\n        this.state = {\n            translateY: MIDDLE_Y,\n            marginTop: (this.currentIndex - MIDDLE_INDEX) * DATE_HEIGHT,\n        };\n\n        this.renderDatepickerItem = this.renderDatepickerItem.bind(this);\n        this.handleContentTouch = this.handleContentTouch.bind(this);\n        this.handleContentMouseDown = this.handleContentMouseDown.bind(this);\n        this.handleContentMouseMove = this.handleContentMouseMove.bind(this);\n        this.handleContentMouseUp = this.handleContentMouseUp.bind(this);\n    }\n\n    componentWillMount() {\n        this._iniDates(this.props.value);\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.value.getTime() === this.props.value.getTime()) {\n            return;\n        }\n        this._iniDates(nextProps.value);\n        this.currentIndex = MIDDLE_INDEX;\n        this.setState({\n            translateY: MIDDLE_Y,\n            marginTop: (this.currentIndex - MIDDLE_INDEX) * DATE_HEIGHT,\n        });\n    }\n\n    /**\n     * Optimization component, Prevents unnecessary rendering\n     * Only value or state change should re-rendering\n     *\n     * @param  {Object} nextProps next props\n     * @param  {Object} nextState next state\n     * @return {Boolean}          Whether re-rendering\n     */\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.value.getTime() !== this.props.value.getTime() ||\n            !shallowEqual(nextState, this.state);\n    }\n\n    _iniDates(date) {\n        const { typeName } = this.props;\n        const dates = Array(...Array(DATE_LENGTH))\n            .map((value, index) =>\n                TimeUtil[`next${typeName}`](date, index - MIDDLE_INDEX));\n        this.setState({ dates });\n    }\n\n    _updateDates(direction) {\n        const { typeName } = this.props;\n        const { dates } = this.state;\n        if (direction === 1) {\n            this.currentIndex ++;\n            this.setState({\n                dates: [\n                    ...dates.slice(1),\n                    TimeUtil[`next${typeName}`](dates[dates.length - 1], 1),\n                ],\n                marginTop: (this.currentIndex - MIDDLE_INDEX) * DATE_HEIGHT,\n            });\n        } else {\n            this.currentIndex --;\n            this.setState({\n                dates: [\n                    TimeUtil[`next${typeName}`](dates[0], -1),\n                    ...dates.slice(0, dates.length - 1),\n                ],\n                marginTop: (this.currentIndex - MIDDLE_INDEX) * DATE_HEIGHT,\n            });\n        }\n    }\n\n    _checkIsUpdateDates(direction, translateY) {\n        return direction === 1 ?\n            this.currentIndex * DATE_HEIGHT + DATE_HEIGHT / 2 < -translateY :\n            this.currentIndex * DATE_HEIGHT - DATE_HEIGHT / 2 > -translateY;\n    }\n\n    /**\n     * 清除对象的transition样式\n     * @param  {Dom}     obj     指定的对象\n     * @return {undefined}\n     */\n    _clearTransition(obj) {\n        obj.style[TRANSITION] = ''; // eslint-disable-line\n    }\n\n    /**\n     * 滑动到下一日期\n     * @param  {number} direction 滑动方向\n     * @return {undefined}\n     */\n    _moveToNext(direction) {\n        const date = this.state.dates[MIDDLE_INDEX];\n        const { max, min } = this.props;\n        if (direction === -1 && date.getTime() < min.getTime()) {\n            this._updateDates(1);\n        } else if (direction === 1 && date.getTime() > max.getTime()) {\n            this._updateDates(-1);\n        }\n\n        this._moveTo(this.refs.scroll, this.currentIndex);\n    }\n\n    /**\n     * 添加滑动动画\n     * @param  {DOM} obj   DOM对象\n     * @param  {number} angle 角度\n     * @return {undefined}\n     */\n    _moveTo(obj, currentIndex) {\n        this.animating = true;\n        obj.style[TRANSITION] = `${TRANSFORM_CSS} .2s ease-out`; // eslint-disable-line\n        this.setState({\n            translateY: -currentIndex * DATE_HEIGHT,\n        });\n        setTimeout(() => {\n            this.animating = false;\n            this.props.onSelect(this.state.dates[MIDDLE_INDEX]);\n            this._clearTransition(this.refs.scroll);\n        }, 200);\n    }\n\n    handleStart(event) {\n        this.touchY = event.pageY || event.targetTouches[0].pageY;\n        this.translateY = this.state.translateY;\n    }\n\n\n    handleMove(event) {\n        const touchY = event.pageY || event.targetTouches[0].pageY;\n        const dir = touchY - this.touchY;\n        const translateY = this.translateY + dir;\n        const direction = dir > 0 ? -1 : 1;\n\n        // 日期最小值，最大值限制\n        const date = this.state.dates[MIDDLE_INDEX];\n        const { max, min } = this.props;\n        if (date.getTime() < min.getTime() ||\n            date.getTime() > max.getTime()) {\n            return;\n        }\n\n        // 检测是否更新日期列表\n        if (this._checkIsUpdateDates(direction, translateY)) {\n            this._updateDates(direction);\n        }\n\n        this.setState({ translateY });\n    }\n\n    handleEnd(event) {\n        const touchY = event.pageY || event.changedTouches[0].pageY;\n        const dir = touchY - this.touchY;\n        const direction = dir > 0 ? -1 : 1;\n        this._moveToNext(direction);\n    }\n\n    /**\n     * 滑动日期选择器触屏事件\n     * @param  {Object} event 事件对象\n     * @return {undefined}\n     */\n    handleContentTouch(event) {\n        event.preventDefault();\n        if (this.animating) return;\n        if (event.type === 'touchstart') {\n            this.handleStart(event);\n        } else if (event.type === 'touchmove') {\n            this.handleMove(event);\n        } else if (event.type === 'touchend') {\n            this.handleEnd(event);\n        }\n    }\n\n    /**\n     * 滑动日期选择器鼠标事件\n     * @param  {Object} event 事件对象\n     * @return {undefined}\n     */\n    handleContentMouseDown(event) {\n        if (this.animating) return;\n        this.handleStart(event);\n        document.addEventListener('mousemove', this.handleContentMouseMove);\n        document.addEventListener('mouseup', this.handleContentMouseUp);\n    }\n\n    handleContentMouseMove(event) {\n        if (this.animating) return;\n        this.handleMove(event);\n    }\n\n    handleContentMouseUp(event) {\n        if (this.animating) return;\n        this.handleEnd(event);\n        document.removeEventListener('mousemove', this.handleContentMouseMove);\n        document.removeEventListener('mouseup', this.handleContentMouseUp);\n    }\n\n    /**\n     * 渲染一个日期DOM对象\n     * @param  {Object} date date数据\n     * @return {Object}      JSX对象\n     */\n    renderDatepickerItem(date, index) {\n        const className =\n            (date < this.props.min || date > this.props.max) ?\n            'disabled' : '';\n\n        return (\n            <li\n                key={index}\n                className={className}>\n                {TimeUtil.convertDate(date, this.props.format)}\n            </li>\n        );\n    }\n\n    render() {\n        const scrollStyle = {\n            [TRANSFORM]: `translateY(${this.state.translateY}px)`,\n            marginTop: this.state.marginTop,\n        };\n\n        return (\n            <div className=\"datepicker-col-1\">\n                <div\n                    className=\"datepicker-viewport\"\n                    onTouchStart={this.handleContentTouch}\n                    onTouchMove={this.handleContentTouch}\n                    onTouchEnd={this.handleContentTouch}\n                    onMouseDown={this.handleContentMouseDown}>\n                    <div className=\"datepicker-wheel\">\n                        <ul\n                            ref=\"scroll\"\n                            className=\"datepicker-scroll\"\n                            style={scrollStyle}>\n                            {this.state.dates.map(this.renderDatepickerItem)}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDatePickerItem.propTypes = {\n    value: PropTypes.object,\n    min: PropTypes.object,\n    max: PropTypes.object,\n    format: PropTypes.string,\n    typeName: PropTypes.string,\n    onSelect: PropTypes.func,\n};\n\nexport default DatePickerItem;\n","/**\n * @module DatePicker Component\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport DatePickerItem from './DatePickerItem.js';\nimport PureRender from './pureRender.js';\nimport { convertDate, nextDate } from './time.js';\n\n/**\n * Class DatePicker Component Class\n * @extends Component\n */\nclass DatePicker extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: nextDate(this.props.value),\n        };\n\n        this.handleFinishBtnClick = this.handleFinishBtnClick.bind(this);\n        this.handleDateSelect = this.handleDateSelect.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // update value of state\n        const date = nextDate(nextProps.value);\n        if (date.getTime() !== this.state.value.getTime()) {\n            this.setState({ value: date });\n        }\n    }\n\n    /**\n     * Optimization component, Prevents unnecessary rendering\n     * Only props or state change or value before re-rendering\n     *\n     * @param  {Object} nextProps next props\n     * @param  {Object} nextState next state\n     * @return {Boolean}          Whether re-rendering\n     */\n    shouldComponentUpdate(nextProps, nextState) {\n        const date = nextDate(nextState.value);\n        return date.getTime() !== this.state.value.getTime() ||\n                PureRender.shouldComponentUpdate(nextProps, nextState, this.props, this.state);\n    }\n\n    /**\n     * 点击完成按钮事件\n     * @return {undefined}\n     */\n    handleFinishBtnClick() {\n        this.props.onSelect(this.state.value);\n    }\n\n    /**\n     * 选择下一个日期\n     * @return {undefined}\n     */\n    handleDateSelect(value) {\n        this.setState({ value });\n    }\n\n    /**\n     * render函数\n     * @return {Object} JSX对象\n     */\n    render() {\n        const { min, max, theme, dateFormat } = this.props;\n        const value = this.state.value;\n        const themeClassName =\n            ['default', 'dark', 'ios', 'android', 'android-dark'].indexOf(theme) === -1 ?\n            'default' : theme;\n\n        return (\n            <div\n                className={`datepicker ${themeClassName}`}>\n                <div className=\"datepicker-header\">{convertDate(value, 'YYYY/MM/DD')}</div>\n                <div className=\"datepicker-content\">\n                    <DatePickerItem\n                        value={value}\n                        min={min}\n                        max={max}\n                        typeName=\"Year\"\n                        format={dateFormat[0]}\n                        onSelect={this.handleDateSelect} />\n                    <DatePickerItem\n                        value={value}\n                        min={min}\n                        max={max}\n                        typeName=\"Month\"\n                        format={dateFormat[1]}\n                        onSelect={this.handleDateSelect} />\n                    <DatePickerItem\n                        value={value}\n                        min={min}\n                        max={max}\n                        typeName=\"Date\"\n                        format={dateFormat[2]}\n                        onSelect={this.handleDateSelect} />\n                </div>\n                <div className=\"datepicker-navbar\">\n                    <a\n                        className=\"datepicker-navbar-btn\"\n                        onClick={this.handleFinishBtnClick}>完成</a>\n                    <a\n                        className=\"datepicker-navbar-btn\"\n                        onClick={this.props.onCancel}>取消</a>\n                </div>\n            </div>\n        );\n    }\n }\n\nDatePicker.propTypes = {\n    theme: PropTypes.string,\n    value: PropTypes.object,\n    min: PropTypes.object,\n    max: PropTypes.object,\n    dateFormat: PropTypes.array,\n    onSelect: PropTypes.func,\n    onCancel: PropTypes.func,\n};\n\nexport default DatePicker;\n","import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nconst renderSubtreeIntoContainer = ReactDOM.unstable_renderSubtreeIntoContainer;\n\n\nclass Modal extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n        isOpen: PropTypes.bool,\n    }\n\n    static defaultProps = {\n        isOpen: false,\n    }\n\n    componentDidMount() {\n        this._div = document.createElement('div');\n        this._div.classList.add('Modal-Portal');\n        document.body.appendChild(this._div);\n        this.renderPortal(this.props);\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.renderPortal(newProps);\n    }\n\n    componentWillUnmount() {\n        ReactDOM.unmountComponentAtNode(this._div);\n        this._div.parentNode.removeChild(this._div);\n    }\n\n    renderPortal(props) {\n        const portal =\n        React.cloneElement(this.props.children, { ...props, key: 'portal' }, null);\n\n        this.portal =\n        renderSubtreeIntoContainer(this, portal, this._div);\n    }\n\n    render() {\n        return (<noscript / >);\n    }\n}\n\nexport default Modal;\n"]}